{"version":3,"sources":["components/block.jsx","components/button.jsx","components/header.jsx","components/footer.jsx","App.jsx","algorithms/linearSearch.js","algorithms/jumpSearch.js","algorithms/binarySearch.js","algorithms/exponentialSearch.js","algorithms/fibonacciSearch.js","algorithms/ternarySearch.js","index.jsx"],"names":["Block","this","props","state","height","className","style","Component","styles","StyleSheet","create","container1","cursor","color","fontWeight","fontSize","container2","title","fontFamily","lineHeight","letterSpacing","marginLeft","Button","otherProps","customStyle","css","vertical","container","paddingTop","paddingBottom","borderBottom","backgroundColor","separator","borderLeft","width","fontStyle","space","Header","horizontal","onClick","window","location","reload","margin","paddingLeft","paddingRight","slider","minWidth","Footer","numBlocks","onChange","searching","Typography","gutterBottom","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","min","max","_","value","disabled","Math","floor","START_TOTAL","App","targetSize","blockList","speed","getInitialBlockList","setState","i","length","sliderName","newBlockList","actions","clear","timer","todo","j","tmp","setTimeout","selectedItem","target","result","action","push","linearSearch","round","sqrt","prev","jumpSearch","l","r","mid","binarySearch","interpolationSearch","bound","exponentialSearch","slice","fibMMm2","fibMMm1","fibM","offset","fibonacciSearch","mid1","mid2","ternarySearch","animate","flexGrow","handleButton","map","block","blockIdx","key","handleSlider","createBlock","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c676fc9d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./block.css\";\n\nclass Block extends Component {\n  render() {\n    const { state, height } = this.props;\n\n    return (\n      <div\n        className={`block block-${state}`}\n        style={{ height: `${height}px` }}\n      ></div>\n    );\n  }\n}\n\nexport default Block;\n","import React from \"react\";\nimport { string } from \"prop-types\";\nimport { Row } from \"simple-flexbox\";\nimport { StyleSheet, css } from \"aphrodite\";\n\nconst styles = StyleSheet.create({\n  container1: {\n    height: 56,\n    cursor: \"pointer\",\n    \":hover\": {\n      // color: \"rgba(10, 100, 255)\",\n      color: \"lightseagreen\",\n      fontWeight: \"bold\",\n      fontSize: 16\n    }\n  },\n  container2: {\n    height: 56,\n    cursor: \"pointer\",\n    \":hover\": {\n      // color: \"rgba(10, 100, 255)\",\n      color: \"lightcoral\",\n      fontWeight: \"bold\",\n      fontSize: 16\n    }\n  },\n  title: {\n    fontFamily: \"Muli\",\n    fontSize: 15,\n    lineHeight: \"20px\",\n    letterSpacing: \"0.2px\",\n    // color: \"#2F4F4F\",\n    color: \"white\",\n    marginLeft: 24\n  }\n});\n\nfunction Button(props) {\n  const { title, ...otherProps } = props;\n\n  let customStyle = styles.container1;\n  if (title === \"Clear\") {\n    customStyle = styles.container2;\n  }\n\n  return (\n    <Row\n      className={css(customStyle, styles.title)}\n      vertical=\"center\"\n      {...otherProps}\n    >\n      {title}\n    </Row>\n  );\n}\n\nButton.propTypes = {\n  title: string\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport { Row } from \"simple-flexbox\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport Button from \"./button.jsx\";\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 10,\n    height: 40,\n    paddingBottom: 15,\n    borderBottom: \"2px solid #DFE0EB\",\n    backgroundColor: \"#24292e\"\n  },\n\n  separator: {\n    borderLeft: \"2px solid #DFE0EB\",\n    marginLeft: 32,\n    height: 32,\n    width: 2\n  },\n  title: {\n    marginLeft: 20,\n    fontFamily: \"Muli\",\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: 24,\n    lineHeight: \"30px\",\n    letterSpacing: 0.3,\n    cursor: \"default\",\n    color: \"white\",\n    cursor: \"pointer\"\n  },\n  space: {\n    marginLeft: 20\n  }\n});\n\nclass Header extends Component {\n  state = {};\n  render() {\n    return (\n      <Row\n        className={css(styles.container)}\n        vertical=\"center\"\n        horizontal=\"space-between\"\n      >\n        <span\n          className={css(styles.title)}\n          onClick={() => {\n            window.location.reload(false);\n          }}\n        >\n          Search Algorithm Visualizer\n        </span>\n        <Row vertical=\"center\">\n          <Button\n            title=\"Linear Search\"\n            onClick={() => this.props.onClick(\"linearSearch\")}\n          />\n          <Button\n            title=\"Jump Search\"\n            onClick={() => this.props.onClick(\"jumpSearch\")}\n          />\n          <Button\n            title=\"Binary Search\"\n            onClick={() => this.props.onClick(\"binarySearch\")}\n          />\n          <Button\n            title=\"Ternary Search\"\n            onClick={() => this.props.onClick(\"ternarySearch\")}\n          />\n          {/* <Button\n            title=\"Interpolation Search\"\n            onClick={() => this.props.onClick(\"interpolationSearch\")}\n          /> */}\n          <Button\n            title=\"Exponential Search\"\n            onClick={() => this.props.onClick(\"exponentialSearch\")}\n          />\n          <Button\n            title=\"Fibonacci Search\"\n            onClick={() => this.props.onClick(\"fibonacciSearch\")}\n          />\n          <div className={css(styles.separator)}></div>\n          <Button title=\"Clear\" onClick={() => this.props.onClick(\"clear\")} />\n          <div style={{ marginLeft: 30 }}></div>\n        </Row>\n      </Row>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { Row } from \"simple-flexbox\";\nimport { StyleSheet, css } from \"aphrodite\";\n\nconst START_TOTAL = 30;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingBottom: 60,\n    margin: \"auto\",\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\"\n  },\n  title: {\n    fontFamily: \"Muli\",\n    fontSize: 16,\n    lineHeight: \"20px\",\n    letterSpacing: \"0.2px\",\n    color: \"#2F4F4F\",\n    paddingRight: 10\n  },\n\n  slider: {\n    minWidth: \"15vw\"\n  }\n});\n\nclass Footer extends Component {\n  render() {\n    const { numBlocks, onChange, searching } = this.props;\n    return (\n      <Row className={css(styles.container)}>\n        <Typography\n          className={css(styles.title)}\n          style={{ minWidth: \"70px\" }}\n          gutterBottom\n        >\n          Number of Blocks\n        </Typography>\n        <Slider\n          className={css(styles.slider)}\n          defaultValue={START_TOTAL}\n          aria-labelledby=\"discrete-slider\"\n          valueLabelDisplay=\"auto\"\n          step={1}\n          min={5}\n          max={50}\n          onChange={(_, value) => {\n            onChange(\"numBlocks\", value);\n          }}\n          disabled={searching}\n        />\n        <div style={{ marginLeft: 50 }}></div>\n        <Typography className={css(styles.title)} gutterBottom>\n          Target Size\n        </Typography>\n        <Slider\n          className={css(styles.slider)}\n          defaultValue={Math.floor(START_TOTAL / 2) + 1}\n          aria-labelledby=\"discrete-slider\"\n          valueLabelDisplay=\"auto\"\n          step={1}\n          min={1}\n          max={numBlocks}\n          onChange={(_, value) => {\n            onChange(\"targetSize\", value);\n          }}\n          disabled={searching}\n        />\n        <div style={{ marginLeft: 50 }}></div>\n        <Typography className={css(styles.title)} gutterBottom>\n          Speed\n        </Typography>\n        <Slider\n          className={css(styles.slider)}\n          defaultValue={50}\n          aria-labelledby=\"discrete-slider\"\n          valueLabelDisplay=\"auto\"\n          step={1}\n          //   marks\n          min={1}\n          max={100}\n          onChange={(_, value) => {\n            onChange(\"speed\", value);\n          }}\n          disabled={searching}\n        />\n      </Row>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Block from \"./components/block.jsx\";\nimport { Column, Row } from \"simple-flexbox\";\nimport Header from \"./components/header.jsx\";\nimport Footer from \"./components/footer.jsx\";\nimport \"./index.css\";\nimport { linearSearch } from \"./algorithms/linearSearch.js\";\nimport { jumpSearch } from \"./algorithms/jumpSearch.js\";\nimport { binarySearch } from \"./algorithms/binarySearch.js\";\nimport { interpolationSearch } from \"./algorithms/interpolationSearch.js\";\nimport { exponentialSearch } from \"./algorithms/exponentialSearch.js\";\nimport { fibonacciSearch } from \"./algorithms/fibonacciSearch.js\";\nimport { ternarySearch } from \"./algorithms/ternarySearch.js\";\n\nconst PIXEL_WIDTH = 10;\nconst INCREMENT = 7;\nconst START_TOTAL = 30;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numBlocks: START_TOTAL,\n      targetSize: Math.floor(START_TOTAL / 2),\n      blockList: [],\n      searching: false,\n      speed: 200\n    };\n  }\n\n  componentDidMount() {\n    const blockList = getInitialBlockList(\n      this.state.numBlocks,\n      this.state.targetSize\n    );\n    this.setState({ blockList });\n  }\n\n  clear() {\n    const blockList = [...this.state.blockList];\n    for (let i = 1; i < blockList.length; i++) {\n      blockList[i].state = \"pending\";\n    }\n    this.setState({ blockList, searching: false });\n  }\n\n  handleSlider(sliderName, value) {\n    switch (sliderName) {\n      case \"numBlocks\":\n        this.setState({\n          numBlocks: value,\n          targetSize: Math.min(value - 1, this.state.targetSize)\n        });\n        const blockList = getInitialBlockList(\n          this.state.numBlocks,\n          Math.min(value - 1, this.state.targetSize)\n        );\n\n        this.setState({ blockList });\n        break;\n      case \"targetSize\":\n        const newBlockList = getInitialBlockList(\n          this.state.numBlocks,\n          value - 1\n        );\n        this.setState({\n          blockList: newBlockList,\n          targetSize: value - 1\n        });\n        break;\n      case \"speed\":\n        this.setState({\n          speed: 200 - (value - 50) * 2\n        });\n        break;\n      default:\n    }\n  }\n\n  animate(actions) {\n    this.clear();\n    this.setState({ searching: true });\n    let blockList = [...this.state.blockList];\n    const { speed } = this.state;\n    let timer = 0;\n\n    for (let i = 0; i < actions.length; i++) {\n      let todo = actions[i];\n      let state = \"pending\";\n      for (let j = 0; j < todo.length; j++) {\n        let tmp = state;\n        if (typeof todo[j] === \"string\") {\n          state = todo[j];\n        } else {\n          setTimeout(() => {\n            blockList[todo[j]].state = tmp;\n            this.setState({ blockList });\n          }, speed * timer);\n        }\n      }\n      timer += 1;\n    }\n    setTimeout(() => {\n      this.setState({ searching: false });\n    }, speed * timer);\n  }\n\n  handleButton(selectedItem) {\n    if (this.state.searching) {\n      return;\n    }\n    this.clear();\n    let actions = [];\n    switch (selectedItem) {\n      case \"linearSearch\":\n        actions = linearSearch(this.state.blockList);\n        break;\n      case \"jumpSearch\":\n        actions = jumpSearch(this.state.blockList);\n        break;\n      case \"binarySearch\":\n        actions = binarySearch(this.state.blockList);\n        break;\n      case \"interpolationSearch\":\n        actions = interpolationSearch(this.state.blockList);\n        break;\n      case \"exponentialSearch\":\n        actions = exponentialSearch(this.state.blockList);\n        break;\n      case \"fibonacciSearch\":\n        actions = fibonacciSearch(this.state.blockList);\n        break;\n      case \"ternarySearch\":\n        actions = ternarySearch(this.state.blockList);\n        break;\n      default:\n    }\n    this.animate(actions);\n  }\n\n  render() {\n    const { blockList } = this.state;\n\n    return (\n      <Column flexGrow={1} className=\"container\">\n        <Header\n          onClick={selectedItem => this.handleButton(selectedItem)}\n        ></Header>\n        <Row className=\"main-block\">\n          <div className=\"block-list\">\n            {blockList.map((block, blockIdx) => {\n              const { state, height } = block;\n              return (\n                <Block key={blockIdx} state={state} height={height}></Block>\n              );\n            })}\n          </div>\n        </Row>\n        <Footer\n          numBlocks={this.state.numBlocks}\n          onChange={(sliderName, value) => this.handleSlider(sliderName, value)}\n          searching={this.state.searching}\n        ></Footer>\n      </Column>\n    );\n  }\n}\n\nconst getInitialBlockList = (numBlocks, targetSize) => {\n  const blockList = [];\n  blockList.push(createBlock(targetSize));\n  blockList[0].state = \"target\";\n  for (let i = 0; i < numBlocks; i++) {\n    blockList.push(createBlock(i));\n  }\n  return blockList;\n};\n\nconst createBlock = i => {\n  return {\n    state: \"pending\",\n    height: PIXEL_WIDTH + i * INCREMENT\n  };\n};\n\nexport default App;\n","export function linearSearch(blockList) {\n  const target = blockList[0].height;\n  let result = [];\n  let action = [];\n  for (let i = 1; i < blockList.length; i++) {\n    action.push(\"curr\", i);\n    result.push(action);\n    action = [];\n    if (blockList[i].height === target) {\n      action.push(\"result\", i);\n      result.push(action);\n      return result;\n    }\n    action.push(\"processed\", i);\n  }\n}\n\n//original\n\n// linearSearch() {\n//     this.clear();\n//     this.setState({ searching: true });\n//     const blockList = [...this.state.blockList];\n//     const targetBlock = this.state.blockList[0];\n//     const { speed } = this.state;\n\n//     let timer = 0;\n//     // loop from beginning one by one\n//     for (let i = 1; i <= blockList.length - 1; i++) {\n//       //update to show curr block\n//       setTimeout(() => {\n//         blockList[i].state = \"curr\";\n//         this.setState({ blockList });\n//       }, speed * timer);\n//       timer += 1;\n//       // block is found\n//       if (blockList[i].height === targetBlock.height) {\n//         setTimeout(() => {\n//           blockList[i].state = \"result\";\n//           this.setState({ blockList, searching: false });\n//         }, speed * timer);\n//         return;\n//       }\n//       // mark block as processed\n//       setTimeout(() => {\n//         blockList[i].state = \"processed\";\n//         this.setState({ blockList });\n//       }, speed * timer);\n//     }\n//   }\n","export function jumpSearch(blockList) {\n  const target = blockList[0].height;\n  let result = [];\n  let action = [];\n\n  let step = Math.round(Math.sqrt(blockList.length - 1));\n  let prev = 1;\n\n  while (blockList[Math.min(step, blockList.length - 1)].height < target) {\n    action.push(\"processed\");\n    for (let i = 1; i < prev; i++) {\n      action.push(i);\n    }\n    action.push(\"pending\", prev);\n    action.push(\"curr\", step);\n    result.push(action);\n    action = [];\n    prev = step;\n    step += Math.round(Math.sqrt(blockList.length - 1));\n  }\n\n  for (let i = 1; i <= prev; i++) {\n    action.push(\"processed\", i);\n  }\n  if (step < blockList.length) {\n    action.push(\"curr\", step);\n    result.push(action);\n    action = [];\n    action.push(\"pending\", step);\n    for (let i = step + 1; i < blockList.length; i++) {\n      action.push(\"processed\", i);\n    }\n    result.push(action);\n    action = [];\n  }\n\n  while (blockList[prev].height < target) {\n    action.push(\"processed\", prev, \"curr\", prev + 1);\n    result.push(action);\n    action = [];\n    prev += 1;\n  }\n\n  action.push(\"result\", prev);\n  result.push(action);\n  return result;\n}\n\n// original\n\n// function jumpSearch() {\n//   this.clear();\n//   this.setState({ searching: true });\n//   const blockList = [...this.state.blockList];\n//   const targetBlock = this.state.blockList[0];\n//   const numBlocks = this.state.numBlocks;\n//   const { speed } = this.state;\n\n//   let step = Math.round(Math.sqrt(numBlocks));\n//   let prev = 1;\n\n//   let timer = 0;\n//   while (blockList[Math.min(step, numBlocks)].height < targetBlock.height) {\n//     let marker = prev;\n//     setTimeout(() => {\n//       for (let i = 1; i < marker; i++) {\n//         blockList[i].state = \"processed\";\n//       }\n//       blockList[marker].state = \"pending\";\n//       this.setState({ blockList });\n//     }, speed * timer);\n//     prev = step;\n//     let i = step;\n//     setTimeout(() => {\n//       blockList[i].state = \"curr\";\n//       this.setState({ blockList });\n//     }, speed * timer);\n//     timer += 1;\n//     step += Math.round(Math.sqrt(numBlocks));\n//   }\n//   let marker = prev;\n//   setTimeout(() => {\n//     for (let i = 1; i < marker; i++) {\n//       blockList[i].state = \"processed\";\n//     }\n//     this.setState({ blockList });\n//   }, speed * timer);\n\n//   while (blockList[prev].height < targetBlock.height) {\n//     let i = prev;\n//     setTimeout(() => {\n//       blockList[i].state = \"processed\";\n//       blockList[i + 1].state = \"curr\";\n//       this.setState({ blockList });\n//     }, speed * timer);\n//     timer += 1;\n//     prev += 1;\n//   }\n\n//   setTimeout(() => {\n//     blockList[prev].state = \"result\";\n//     this.setState({ blockList, searching: false });\n//   }, speed * timer);\n// }\n","export function binarySearch(blockList) {\n  const target = blockList[0].height;\n  let result = [];\n  let action = [];\n\n  let l = 1;\n  let r = blockList.length - 1;\n\n  while (l <= r) {\n    let mid = Math.floor(l + (r - l) / 2);\n    action.push(\"curr\", mid);\n    result.push(action);\n    action = [];\n\n    if (blockList[mid].height === target) {\n      action.push(\"result\", mid);\n      result.push(action);\n      return result;\n    }\n\n    action.push(\"processed\");\n    if (blockList[mid].height < target) {\n      for (let i = 1; i < mid + 1; i++) {\n        action.push(i);\n      }\n      l = mid + 1;\n    } else {\n      for (let i = mid; i < blockList.length; i++) {\n        action.push(i);\n      }\n      r = mid - 1;\n    }\n    result.push(action);\n    action = [];\n  }\n}\n\n//original\n\n// binarySearch() {\n//     this.clear();\n//     this.setState({ searching: true });\n//     const blockList = [...this.state.blockList];\n//     const target = this.state.blockList[0].height;\n//     const { speed } = this.state;\n\n//     let l = 1;\n//     let r = blockList.length - 1;\n\n//     let timer = 0;\n\n//     while (l <= r) {\n//       let mid = Math.floor(l + (r - l) / 2);\n//       setTimeout(() => {\n//         blockList[mid].state = \"curr\";\n//         this.setState({ blockList });\n//       }, speed * timer);\n//       timer += 1;\n//       if (blockList[mid].height === target) {\n//         setTimeout(() => {\n//           blockList[mid].state = \"result\";\n//           this.setState({ blockList, searching: false });\n//         }, speed * timer);\n//         return;\n//       } else if (blockList[mid].height < target) {\n//         setTimeout(() => {\n//           for (let i = 1; i < mid + 1; i++) {\n//             blockList[i].state = \"processed\";\n//           }\n//           this.setState({ blockList });\n//         }, speed * timer);\n//         l = mid + 1;\n//       } else {\n//         setTimeout(() => {\n//           for (let i = mid; i < blockList.length; i++) {\n//             blockList[i].state = \"processed\";\n//           }\n//           this.setState({ blockList });\n//         }, speed * timer);\n//         r = mid - 1;\n//       }\n//       timer += 1;\n//     }\n//   }\n","export function exponentialSearch(blockList) {\n  const target = blockList[0].height;\n  let result = [];\n  let action = [];\n\n  let bound = 1;\n  while (bound < blockList.length && blockList[bound].height < target) {\n    action.push(\"processed\");\n    for (let i = 1; i < bound; i++) {\n      action.push(i);\n    }\n    action.push(\"curr\", bound);\n    result.push(action);\n    action = [];\n    bound = bound * 2;\n  }\n  if (Math.floor(bound / 2) > 0) {\n    action.push(\"pending\", Math.floor(bound / 2));\n  }\n  if (bound < blockList.length - 1) {\n    action.push(\"processed\");\n    for (let i = bound + 1; i < blockList.length; i++) {\n      action.push(i);\n    }\n  }\n\n  let l = Math.floor(bound / 2);\n  let r = Math.min(bound, blockList.length - 1);\n  if (l === 0) {\n    l += 1;\n  }\n\n  while (l <= r) {\n    let mid = Math.floor(l + (r - l) / 2);\n    action.push(\"curr\", mid);\n    result.push(action);\n    action = [];\n\n    if (blockList[mid].height === target) {\n      action.push(\"result\", mid);\n      result.push(action);\n      return result;\n    }\n\n    action.push(\"processed\");\n    if (blockList[mid].height < target) {\n      for (let i = 1; i < mid + 1; i++) {\n        action.push(i);\n      }\n      l = mid + 1;\n    } else {\n      for (let i = mid; i < blockList.length; i++) {\n        action.push(i);\n      }\n      r = mid - 1;\n    }\n    result.push(action);\n    action = [];\n  }\n}\n\n//original\n\n//   exponentialSearch() {\n//     this.clear();\n//     this.setState({ searching: true });\n//     const blockList = [...this.state.blockList];\n//     const target = this.state.blockList[0].height;\n//     const { speed } = this.state;\n\n//     let timer = 0;\n//     let bound = 1;\n//     while (bound < blockList.length && blockList[bound].height < target) {\n//       let temp = bound;\n//       setTimeout(() => {\n//         for (let i = 1; i < temp; i++) {\n//           blockList[i].state = \"processed\";\n//         }\n//         blockList[temp].state = \"curr\";\n//         this.setState({ blockList });\n//       }, speed * timer);\n//       timer += 1;\n//       bound = bound * 2;\n//     }\n//     if (Math.floor(bound / 2) > 0) {\n//       setTimeout(() => {\n//         blockList[Math.floor(bound / 2)].state = \"pending\";\n//         this.setState({ blockList });\n//       }, speed * timer);\n//     }\n\n//     if (bound < blockList.length - 1) {\n//       setTimeout(() => {\n//         for (let i = bound + 1; i < blockList.length; i++) {\n//           blockList[i].state = \"processed\";\n//         }\n//         this.setState({ blockList });\n//       }, speed * timer);\n//     }\n\n//     let l = Math.floor(bound / 2);\n//     let r = Math.min(bound, blockList.length - 1);\n//     if (l === 0) {\n//       l += 1;\n//     }\n\n//     while (l <= r) {\n//       let mid = Math.floor(l + (r - l) / 2);\n//       setTimeout(() => {\n//         blockList[mid].state = \"curr\";\n//         this.setState({ blockList });\n//       }, speed * timer);\n//       timer += 1;\n//       if (blockList[mid].height === target) {\n//         setTimeout(() => {\n//           blockList[mid].state = \"result\";\n//           this.setState({ blockList, searching: false });\n//         }, speed * timer);\n//         return;\n//       } else if (blockList[mid].height < target) {\n//         setTimeout(() => {\n//           for (let i = 1; i < mid + 1; i++) {\n//             blockList[i].state = \"processed\";\n//           }\n//           this.setState({ blockList });\n//         }, speed * timer);\n//         l = mid + 1;\n//       } else {\n//         setTimeout(() => {\n//           for (let i = mid; i < blockList.length; i++) {\n//             blockList[i].state = \"processed\";\n//           }\n//           this.setState({ blockList });\n//         }, speed * timer);\n//         r = mid - 1;\n//       }\n//       timer += 1;\n//     }\n//   }\n","export function fibonacciSearch(blockList) {\n  const target = blockList[0].height;\n  blockList = blockList.slice(1);\n  let result = [];\n  let action = [];\n\n  let fibMMm2 = 0;\n  let fibMMm1 = 1;\n  let fibM = fibMMm2 + fibMMm1;\n\n  while (fibM < blockList.length) {\n    fibMMm2 = fibMMm1;\n    fibMMm1 = fibM;\n    fibM = fibMMm2 + fibMMm1;\n  }\n\n  let offset = -1;\n  while (fibM > 1) {\n    let i = Math.min(offset + fibMMm2, blockList.length - 1);\n    action.push(\"curr\", i + 1);\n    result.push(action);\n    action = [];\n\n    if (blockList[i].height === target) {\n      action.push(\"result\", i + 1);\n      result.push(action);\n      return result;\n    }\n    action.push(\"processed\");\n\n    if (blockList[i].height < target) {\n      for (let j = 0; j < i + 1; j++) {\n        action.push(j + 1);\n      }\n      fibM = fibMMm1;\n      fibMMm1 = fibMMm2;\n      fibMMm2 = fibM - fibMMm1;\n      offset = i;\n    } else {\n      for (let j = i; j < blockList.length; j++) {\n        action.push(j + 1);\n      }\n      fibM = fibMMm2;\n      fibMMm1 = fibMMm1 - fibMMm2;\n      fibMMm2 = fibM - fibMMm1;\n    }\n    result.push(action);\n    action = [];\n  }\n\n  if (fibMMm1 && blockList[offset + 1].height === target) {\n    action.push(\"result\", offset + 2);\n    result.push(action);\n    return result;\n  }\n\n  return result;\n}\n","export function ternarySearch(blockList) {\n  const target = blockList[0].height;\n  let result = [];\n  let action = [];\n\n  let l = 1;\n  let r = blockList.length - 1;\n\n  while (l <= r) {\n    let mid1 = Math.floor(l + (r - l) / 3);\n    let mid2 = Math.floor(r - (r - l) / 3);\n\n    action.push(\"curr\", mid1, mid2);\n    result.push(action);\n    action = [];\n\n    if (blockList[mid1].height === target) {\n      action.push(\"processed\", mid2);\n      action.push(\"result\", mid1);\n      result.push(action);\n      return result;\n    }\n\n    if (blockList[mid2].height === target) {\n      action.push(\"processed\", mid1);\n      action.push(\"result\", mid2);\n      result.push(action);\n      return result;\n    }\n\n    action.push(\"processed\");\n    if (blockList[mid1].height > target) {\n      for (let i = mid1; i < blockList.length; i++) {\n        action.push(i);\n      }\n      r = mid1 - 1;\n    } else if (blockList[mid2].height < target) {\n      for (let i = 1; i < mid2 + 1; i++) {\n        action.push(i);\n      }\n      l = mid2 + 1;\n    } else {\n      for (let i = 1; i < mid1 + 1; i++) {\n        action.push(i);\n      }\n      for (let i = mid2; i < blockList.length; i++) {\n        action.push(i);\n      }\n      l = mid1 + 1;\n      r = mid2 - 1;\n    }\n    result.push(action);\n    action = [];\n  }\n}\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\nimport React from \"react\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}